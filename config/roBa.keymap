#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        num_comma: num_comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp COMMA &kp LANG1>;
            label = "NUM_COMMA";
        };

        num_plus: num_plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp RS(COLON) &kp LANG1>;
            label = "NUM_PLUS";
        };

        num_minus: num_minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp MINUS &kp LANG1>;
            label = "NUM_MINUS";
        };

        num_times: num_times {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp RS(DOUBLE_QUOTES) &kp LANG1>;
            label = "NUM_TIMES";
        };

        new_divided: new_divided {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp SLASH &kp LANG1>;
            label = "NEW_DIVIDED";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_ALT Q      &lt 4 W         &lt 5 E     &kp R               &kp T                                       &kp Y      &kp U  &lt 5 I    &lt 4 O  &mt RIGHT_ALT P
&mt LEFT_CONTROL A  &kp S           &kp D       &mt LEFT_CONTROL F  &kp G        &trans         &trans          &kp H      &kp J  &kp K      &kp L    &mt RIGHT_CONTROL MINUS
&mt LEFT_SHIFT Z    &kp X           &kp C       &mt LEFT_SHIFT V    &kp B        &trans         &kp LANGUAGE_1  &kp N      &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&lt 6 ESCAPE        &kp LANGUAGE_2  &kp DELETE  &kp BACKSPACE       &lt 3 SPACE  &lt 2 TAB      &mo 1           &kp ENTER                             &kp LEFT_WIN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12  &trans                      &kp PERCENT    &kp N7  &kp N8  &kp N9  &kp RC(SEMICOLON)
&kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans      &trans  &kp RS(MINUS)  &kp N4  &kp N5  &kp N6  &kp RC(SINGLE_QUOTE)
&kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans      &trans  &kp N0         &kp N1  &kp N2  &kp N3  &kp INTERNATIONAL_3
&trans  &trans   &trans   &trans   &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        NUM {
            bindings = <
&trans                       &kp PAGE_UP         &kp UP_ARROW        &kp PAGE_DOWN        &trans                       &num_times       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &new_divided
&kp HOME                     &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &kp END  &trans      &trans  &num_plus        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &num_minus
&mt LEFT_SHIFT LG(UP_ARROW)  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans   &trans      &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &num_comma
&trans                       &trans              &trans              &trans               &trans   &trans      &trans  &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(TAB)           &kp LG(LC(LEFT))        &kp LS(UP_ARROW)        &kp LG(LC(RIGHT_ARROW))  &trans                           &kp RS(N7)  &kp RS(N2)        &kp RS(N8)         &kp RS(N9)        &kp HASH
&kp LS(HOME)          &kp LS(LEFT_ARROW)      &kp LS(DOWN_ARROW)      &kp LS(RIGHT_ARROW)      &kp LS(END)  &trans      &trans  &kp RS(N6)  &kp EXCLAMATION   &kp RIGHT_BRACKET  &kp BACKSLASH     &kp PLUS
&kp LS(LC(UP_ARROW))  &kp LS(LC(LEFT_ARROW))  &kp LS(LC(DOWN_ARROW))  &kp LS(LC(RIGHT_ARROW))  &trans       &trans      &trans  &kp RS(N4)  &kp LEFT_BRACKET  &kp SEMICOLON      &kp SINGLE_QUOTE  &kp RS(INTERNATIONAL_1)
&trans                &trans                  &trans                  &trans                   &trans       &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &trans    &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &mkp MB1  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB4  &mkp MB5                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB4  &mkp MB5                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
